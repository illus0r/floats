{"id":"../node_modules/yamljs/lib/Dumper.js","dependencies":[{"name":"/Users/z/Downloads/floats/package.json","includedInParent":true,"mtime":1571223607802},{"name":"/Users/z/Downloads/floats/node_modules/yamljs/package.json","includedInParent":true,"mtime":1571223607728},{"name":"./Utils","loc":{"line":4,"column":16},"parent":"/Users/z/Downloads/floats/node_modules/yamljs/lib/Dumper.js","resolved":"/Users/z/Downloads/floats/node_modules/yamljs/lib/Utils.js"},{"name":"./Inline","loc":{"line":6,"column":17},"parent":"/Users/z/Downloads/floats/node_modules/yamljs/lib/Dumper.js","resolved":"/Users/z/Downloads/floats/node_modules/yamljs/lib/Inline.js"}],"generated":{"js":"// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/yamljs/lib/Dumper.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}}],"sources":{"../node_modules/yamljs/lib/Dumper.js":"// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n"},"lineCount":54}},"error":null,"hash":"15ccd70ecae458b79474cc941f8524e8","cacheData":{"env":{}}}